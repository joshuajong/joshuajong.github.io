{"ast":null,"code":"var _jsxFileName = \"/Users/joshuajong/Desktop/joshuajong.github.io/src/pages/Thoughts.jsx\";\nimport React from 'react';\nimport Post from '../components/Post.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Thoughts() {\n  // const addTask = async () => {\n  //   try {\n  //     // Define the task data you want to send to your backend\n  //     const newTask = 'New Task Title';\n\n  //     // Send a POST request to your Rust backend\n  //     const response = await fetch('http://localhost:8000/addtask', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify(newTask),\n  //     });\n\n  //     if (response.ok) {\n  //       // Task added successfully, you can handle the response if needed\n  //       console.log('Task added successfully');\n  //     } else {\n  //       // Handle the error response from the backend\n  //       console.error('Failed to add task');\n  //     }\n  //   } catch (error) {\n  //     console.error('Error adding task:', error);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center bg-white text-slate-900 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-16\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl md:text-3xl lg:text-6xl\",\n        children: \"thoughts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-8 md:gap-12 lg:gap-16\",\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(Post, {\n        title: post.title,\n        datePosted: post.datePosted,\n        link: post.link,\n        preview: post.preview,\n        writtenBy: post.writtenBy\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = Thoughts;\nexport default Thoughts;\nvar _c;\n$RefreshReg$(_c, \"Thoughts\");","map":{"version":3,"names":["React","Post","jsxDEV","_jsxDEV","Thoughts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","posts","map","post","index","title","datePosted","link","preview","writtenBy","onClick","addTask","_c","$RefreshReg$"],"sources":["/Users/joshuajong/Desktop/joshuajong.github.io/src/pages/Thoughts.jsx"],"sourcesContent":["import React from 'react';\nimport Post from '../components/Post.jsx';\n\nfunction Thoughts() {\n\n  // const addTask = async () => {\n  //   try {\n  //     // Define the task data you want to send to your backend\n  //     const newTask = 'New Task Title';\n\n  //     // Send a POST request to your Rust backend\n  //     const response = await fetch('http://localhost:8000/addtask', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify(newTask),\n  //     });\n\n  //     if (response.ok) {\n  //       // Task added successfully, you can handle the response if needed\n  //       console.log('Task added successfully');\n  //     } else {\n  //       // Handle the error response from the backend\n  //       console.error('Failed to add task');\n  //     }\n  //   } catch (error) {\n  //     console.error('Error adding task:', error);\n  //   }\n  // };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center bg-white text-slate-900 p-4\">\n      <div className=\"mb-16\">\n        <h1 className=\"text-2xl md:text-3xl lg:text-6xl\">thoughts</h1>\n      </div>\n      <div className=\"grid grid-cols-2 gap-8 md:gap-12 lg:gap-16\">\n        {posts.map((post, index) => (\n          <Post\n            key={ index }\n            title={ post.title }\n            datePosted={ post.datePosted }\n            link={ post.link }\n            preview={ post.preview }\n            writtenBy={ post.writtenBy }\n          />\n        ))}\n      </div>\n      <div className=\"mt-4\">\n        {/* Add Task Button */}\n        <button\n          onClick={addTask}\n          className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n        >\n          Add Task\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Thoughts;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,QAAQA,CAAA,EAAG;EAElB;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACED,OAAA;IAAKE,SAAS,EAAC,qEAAqE;IAAAC,QAAA,gBAClFH,OAAA;MAAKE,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBH,OAAA;QAAIE,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eACNP,OAAA;MAAKE,SAAS,EAAC,4CAA4C;MAAAC,QAAA,EACxDK,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBX,OAAA,CAACF,IAAI;QAEHc,KAAK,EAAGF,IAAI,CAACE,KAAO;QACpBC,UAAU,EAAGH,IAAI,CAACG,UAAY;QAC9BC,IAAI,EAAGJ,IAAI,CAACI,IAAM;QAClBC,OAAO,EAAGL,IAAI,CAACK,OAAS;QACxBC,SAAS,EAAGN,IAAI,CAACM;MAAW,GALtBL,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNP,OAAA;MAAKE,SAAS,EAAC,MAAM;MAAAC,QAAA,eAEnBH,OAAA;QACEiB,OAAO,EAAEC,OAAQ;QACjBhB,SAAS,EAAC,4DAA4D;QAAAC,QAAA,EACvE;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACY,EAAA,GAxDQlB,QAAQ;AA0DjB,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}