{"ast":null,"code":"var _jsxFileName = \"/Users/joshuajong/Desktop/joshuajong.github.io/src/pages/Thoughts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Post from '../components/Post.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Thoughts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // Fetch posts from WordPress using the WordPress.com REST API\n    fetch('https://public-api.wordpress.com/wp/v2/sites/joshuajong4.wordpress.com/posts').then(response => response.json()).then(data => {\n      setPosts(data.map(post => ({\n        title: post.title.rendered,\n        datePosted: post.date,\n        link: post.link,\n        preview: post.excerpt.rendered,\n        writtenBy: post.author.name\n        // You may need to extract the post ID here if you want to link to individual posts.\n      })));\n    }).catch(error => {\n      console.error('Error fetching posts:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center bg-white text-slate-900 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-16\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl md:text-3xl lg:text-6xl\",\n        children: \"thoughts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-8 md:gap-12 lg:gap-16\",\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(Post, {\n        post: post\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Thoughts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Thoughts;\nexport default Thoughts;\nvar _c;\n$RefreshReg$(_c, \"Thoughts\");","map":{"version":3,"names":["React","useEffect","useState","Post","jsxDEV","_jsxDEV","Thoughts","_s","posts","setPosts","fetch","then","response","json","data","map","post","title","rendered","datePosted","date","link","preview","excerpt","writtenBy","author","name","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/Users/joshuajong/Desktop/joshuajong.github.io/src/pages/Thoughts.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Post from '../components/Post.jsx';\n\nfunction Thoughts() {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    // Fetch posts from WordPress using the WordPress.com REST API\n    fetch('https://public-api.wordpress.com/wp/v2/sites/joshuajong4.wordpress.com/posts')\n      .then((response) => response.json())\n      .then((data) => {\n        setPosts(data.map((post) => ({\n          title: post.title.rendered,\n          datePosted: post.date,\n          link: post.link,\n          preview: post.excerpt.rendered,\n          writtenBy: post.author.name,\n          // You may need to extract the post ID here if you want to link to individual posts.\n        })));\n      })\n      .catch((error) => {\n        console.error('Error fetching posts:', error);\n      });\n  }, []);\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center bg-white text-slate-900 p-4\">\n      <div className=\"mb-16\">\n        <h1 className=\"text-2xl md:text-3xl lg:text-6xl\">thoughts</h1>\n      </div>\n      <div className=\"grid grid-cols-2 gap-8 md:gap-12 lg:gap-16\">\n        {posts.map((post, index) => (\n          <Post key={index} post={post} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Thoughts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACAS,KAAK,CAAC,8EAA8E,CAAC,CAClFC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdL,QAAQ,CAACK,IAAI,CAACC,GAAG,CAAEC,IAAI,KAAM;QAC3BC,KAAK,EAAED,IAAI,CAACC,KAAK,CAACC,QAAQ;QAC1BC,UAAU,EAAEH,IAAI,CAACI,IAAI;QACrBC,IAAI,EAAEL,IAAI,CAACK,IAAI;QACfC,OAAO,EAAEN,IAAI,CAACO,OAAO,CAACL,QAAQ;QAC9BM,SAAS,EAAER,IAAI,CAACS,MAAM,CAACC;QACvB;MACF,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAKyB,SAAS,EAAC,qEAAqE;IAAAC,QAAA,gBAClF1B,OAAA;MAAKyB,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpB1B,OAAA;QAAIyB,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eACN9B,OAAA;MAAKyB,SAAS,EAAC,4CAA4C;MAAAC,QAAA,EACxDvB,KAAK,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEoB,KAAK,kBACrB/B,OAAA,CAACF,IAAI;QAAaa,IAAI,EAAEA;MAAK,GAAlBoB,KAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5B,EAAA,CAlCQD,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAoCjB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}