{"ast":null,"code":"var _jsxFileName = \"/Users/joshuajong/Desktop/joshuajong.github.io/src/pages/InvestmentCalculator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction calculateInvestmentGrowth(initialAmount, annualROI, monthlyAddition, years) {\n  const annualAddition = monthlyAddition * 12;\n  let baseAmount = initialAmount;\n  let annualRoiInDollars = [];\n  let finalInvestmentAmountAtYearEnd = [];\n  for (let year = 1; year <= years; year++) {\n    baseAmount += annualAddition; // Final value of investment at end of the year\n\n    // Calculate annual ROI\n    const annualReturn = baseAmount * (annualROI / 100);\n    annualRoiInDollars.push(annualReturn.toFixed(2));\n\n    // Add annual ROI to the total\n    baseAmount += annualReturn;\n    finalInvestmentAmountAtYearEnd.push(baseAmount.toFixed(2));\n  }\n  return [finalInvestmentAmountAtYearEnd, annualRoiInDollars]; // Round to 2 decimal places\n}\n\nconst InvestmentCalculator = () => {\n  _s();\n  const [currentAmount, setCurrentAmount] = useState('0');\n  const [monthlyAmount, setMonthlyAmount] = useState('0');\n  const [roiPercentage, setRoiPercentage] = useState('0');\n  const [yearsInvested, setYearsInvested] = useState('1');\n  const [annualRoi, setAnnualRoi] = useState('');\n  const [monthlyRoi, setMonthlyRoi] = useState('');\n  const [dailyRoi, setDailyRoi] = useState('');\n  const [totalValue, setTotalValue] = useState('');\n  const [currencyCode, setCurrencyCode] = useState('');\n  const currencyCodes = ['SGD', 'MYR', 'AUD', 'USD', 'GBP'];\n  const calculateRoi = () => {\n    const currentInvestmentAmountFloat = parseFloat(currentAmount);\n    const monthlyRecurringInvestmentAmountFloat = parseFloat(monthlyAmount);\n    const roiPercentageFloat = parseFloat(roiPercentage);\n    const yearsInvestedFloat = parseFloat(yearsInvested);\n\n    // const totalAmount = currentInvestmentAmountFloat + (monthlyRecurringInvestmentAmountFloat * 12)\n    const calculatedValues = calculateInvestmentGrowth(currentInvestmentAmountFloat, roiPercentageFloat, monthlyRecurringInvestmentAmountFloat, yearsInvestedFloat);\n    const totalValue = calculatedValues[0];\n    const annualRoiValue = calculatedValues[1];\n    const monthlyRoiValue = annualRoiValue.map(value => (value / 12).toFixed(2));\n    const dailyRoiValue = annualRoiValue.map(value => (value / 365).toFixed(2));\n    let currencySymbol = '';\n    switch (currencyCode) {\n      case 'GBP':\n        currencySymbol = 'Â£';\n        break;\n      case 'MYR':\n        currencySymbol = 'RM';\n        break;\n      default:\n        currencySymbol = '$';\n        break;\n    }\n    const formattedAnnualRoi = annualRoiValue.map(value => `${currencySymbol}${value}`);\n    const formattedMonthlyRoi = monthlyRoiValue.map(value => `${currencySymbol}${value}`);\n    const formattedDailyRoi = dailyRoiValue.map(value => `${currencySymbol}${value}`);\n    const formattedTotalValue = totalValue.map(value => `${currencySymbol}${value}`);\n    setAnnualRoi(formattedAnnualRoi);\n    setMonthlyRoi(formattedMonthlyRoi);\n    setDailyRoi(formattedDailyRoi);\n    setTotalValue(formattedTotalValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center bg-white text-slate-400 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"Investment Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 flex flex-wrap w-full items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"roiInput\",\n        className: \"mt-4 mb-4 mr-8 ml-8 flex-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mb-2\",\n            children: \"Currency:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"border border-slate-400 p-2 w-full rounded\",\n            value: currencyCode,\n            onChange: e => setCurrencyCode(e.target.value),\n            children: currencyCodes.map(symbol => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: symbol,\n              children: symbol\n            }, symbol, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mb-2\",\n            children: \"Amount at Beginning of Year:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"border border-slate-400 p-2 w-full rounded\",\n            type: \"number\",\n            value: currentAmount,\n            onChange: e => setCurrentAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mb-2\",\n            children: \"Amount Added Monthly:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"border border-slate-400 p-2 w-full rounded\",\n            type: \"number\",\n            value: monthlyAmount,\n            onChange: e => setMonthlyAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mb-2\",\n            children: \"Expected ROI in %:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"border border-slate-400 p-2 w-full rounded\",\n            type: \"number\",\n            value: roiPercentage,\n            onChange: e => setRoiPercentage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mb-2\",\n            children: \"Number of years invested\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"border border-slate-400 p-2 w-full rounded\",\n            type: \"number\",\n            value: yearsInvested,\n            onChange: e => setYearsInvested(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 mx-auto text-white px-4 py-2 rounded hover:bg-blue-600 mt-12 mb-5 \",\n          onClick: calculateRoi,\n          children: \"Calculate Potential ROI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"roiResults\",\n        className: \"bg-slate-400 rounded p-4 mb-4 mt-4 mr-8 ml-8 text-white flex-1\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Column Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), totalValue.map((_, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Row \", index + 1]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Annual ROI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), annualRoi.map((value, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: value\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Monthly ROI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), monthlyRoi.map((value, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: value\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Daily ROI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), dailyRoi.map((value, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: value\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(InvestmentCalculator, \"z9qSJTOXGgWBk3wZQUcoL6iFdQI=\");\n_c = InvestmentCalculator;\nexport default InvestmentCalculator;\nvar _c;\n$RefreshReg$(_c, \"InvestmentCalculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","calculateInvestmentGrowth","initialAmount","annualROI","monthlyAddition","years","annualAddition","baseAmount","annualRoiInDollars","finalInvestmentAmountAtYearEnd","year","annualReturn","push","toFixed","InvestmentCalculator","_s","currentAmount","setCurrentAmount","monthlyAmount","setMonthlyAmount","roiPercentage","setRoiPercentage","yearsInvested","setYearsInvested","annualRoi","setAnnualRoi","monthlyRoi","setMonthlyRoi","dailyRoi","setDailyRoi","totalValue","setTotalValue","currencyCode","setCurrencyCode","currencyCodes","calculateRoi","currentInvestmentAmountFloat","parseFloat","monthlyRecurringInvestmentAmountFloat","roiPercentageFloat","yearsInvestedFloat","calculatedValues","annualRoiValue","monthlyRoiValue","map","value","dailyRoiValue","currencySymbol","formattedAnnualRoi","formattedMonthlyRoi","formattedDailyRoi","formattedTotalValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","e","target","symbol","type","onClick","_","index","_c","$RefreshReg$"],"sources":["/Users/joshuajong/Desktop/joshuajong.github.io/src/pages/InvestmentCalculator.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction calculateInvestmentGrowth(initialAmount, annualROI, monthlyAddition, years) {\n  const annualAddition = monthlyAddition * 12\n  let baseAmount = initialAmount;\n  let annualRoiInDollars = [];\n  let finalInvestmentAmountAtYearEnd = [];\n\n  for (let year = 1; year <= years; year++) {\n    baseAmount += annualAddition; // Final value of investment at end of the year\n\n    // Calculate annual ROI\n    const annualReturn = baseAmount * (annualROI / 100);\n    annualRoiInDollars.push(annualReturn.toFixed(2));\n\n    // Add annual ROI to the total\n    baseAmount += annualReturn;\n\n    finalInvestmentAmountAtYearEnd.push(baseAmount.toFixed(2));\n  }\n  return [finalInvestmentAmountAtYearEnd, annualRoiInDollars]; // Round to 2 decimal places\n}\n\nconst InvestmentCalculator = () => {\n  const [currentAmount, setCurrentAmount] = useState('0');\n  const [monthlyAmount, setMonthlyAmount] = useState('0');\n  const [roiPercentage, setRoiPercentage] = useState('0');\n  const [yearsInvested, setYearsInvested] = useState('1');\n  const [annualRoi, setAnnualRoi] = useState('');\n  const [monthlyRoi, setMonthlyRoi] = useState('');\n  const [dailyRoi, setDailyRoi] = useState('');\n  const [totalValue, setTotalValue] = useState('');\n  const [currencyCode, setCurrencyCode] = useState('');\n\n  const currencyCodes = ['SGD', 'MYR', 'AUD', 'USD', 'GBP'];\n\n  const calculateRoi = () => {\n    const currentInvestmentAmountFloat = parseFloat(currentAmount);\n    const monthlyRecurringInvestmentAmountFloat = parseFloat(monthlyAmount);\n    const roiPercentageFloat = parseFloat(roiPercentage);\n    const yearsInvestedFloat = parseFloat(yearsInvested);\n\n    // const totalAmount = currentInvestmentAmountFloat + (monthlyRecurringInvestmentAmountFloat * 12)\n    const calculatedValues = calculateInvestmentGrowth(currentInvestmentAmountFloat, roiPercentageFloat, monthlyRecurringInvestmentAmountFloat, yearsInvestedFloat);\n    const totalValue = calculatedValues[0];\n    const annualRoiValue = calculatedValues[1];\n    const monthlyRoiValue = annualRoiValue.map((value) => (value / 12).toFixed(2));\n    const dailyRoiValue =  annualRoiValue.map((value) => (value / 365).toFixed(2));\n\n    let currencySymbol = ''\n    switch(currencyCode) {\n      case 'GBP':\n        currencySymbol = 'Â£';\n        break;\n      case 'MYR': \n        currencySymbol = 'RM';\n        break;\n      default:\n        currencySymbol = '$';\n        break;\n    }\n\n    const formattedAnnualRoi = annualRoiValue.map((value) => `${currencySymbol}${value}`);\n    const formattedMonthlyRoi = monthlyRoiValue.map((value) => `${currencySymbol}${value}`);\n    const formattedDailyRoi = dailyRoiValue.map((value) => `${currencySymbol}${value}`);\n    const formattedTotalValue = totalValue.map((value) => `${currencySymbol}${value}`);\n\n    setAnnualRoi(formattedAnnualRoi);\n    setMonthlyRoi(formattedMonthlyRoi);\n    setDailyRoi(formattedDailyRoi);\n    setTotalValue(formattedTotalValue);\n  };\n\n  return (\n\n    <div className=\"min-h-screen flex flex-col items-center bg-white text-slate-400 p-4\">\n      <h1 className=\"text-2xl font-bold\">Investment Calculator</h1>\n      <div className=\"p-8 flex flex-wrap w-full items-start\">\n        <div id=\"roiInput\" className=\"mt-4 mb-4 mr-8 ml-8 flex-1\">\n          <div className=\"mt-5\">\n            <label className=\"mb-2\">Currency:</label>\n            <select className=\"border border-slate-400 p-2 w-full rounded\" value={currencyCode} onChange={(e) => setCurrencyCode(e.target.value)}>\n              {currencyCodes.map(symbol => (\n                <option key={symbol} value={symbol}>{symbol}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"mt-5\">\n            <label className=\"mb-2\">Amount at Beginning of Year:</label>\n            <input className=\"border border-slate-400 p-2 w-full rounded\" type=\"number\" value={currentAmount} onChange={(e) => setCurrentAmount(e.target.value)} />\n          </div>\n          <div className=\"mt-5\">\n            <label className=\"mb-2\">Amount Added Monthly:</label>\n            <input className=\"border border-slate-400 p-2 w-full rounded\" type=\"number\" value={monthlyAmount} onChange={(e) => setMonthlyAmount(e.target.value)} />\n          </div>\n          <div className=\"mt-5\">\n            <label className=\"mb-2\">Expected ROI in %:</label>\n            <input className=\"border border-slate-400 p-2 w-full rounded\" type=\"number\" value={roiPercentage} onChange={(e) => setRoiPercentage(e.target.value)} />\n          </div>\n          <div className=\"mt-5\">\n            <label className=\"mb-2\">Number of years invested</label>\n            <input className=\"border border-slate-400 p-2 w-full rounded\" type=\"number\" value={yearsInvested} onChange={(e) => setYearsInvested(e.target.value)} />\n          </div>\n\n          <button className=\"bg-blue-500 mx-auto text-white px-4 py-2 rounded hover:bg-blue-600 mt-12 mb-5 \" onClick={calculateRoi}>Calculate Potential ROI</button>\n        </div>\n        <div id=\"roiResults\" className=\"bg-slate-400 rounded p-4 mb-4 mt-4 mr-8 ml-8 text-white flex-1\">\n          <table>\n            <thead>\n              <tr>\n                <th>Column Name</th>\n                {totalValue.map((_, index) => (\n                  <th key={index}>Row {index + 1}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Annual ROI</td>\n                {annualRoi.map((value, index) => (\n                  <td key={index}>{value}</td>\n                ))}\n              </tr>\n              <tr>\n                <td>Monthly ROI</td>\n                {monthlyRoi.map((value, index) => (\n                  <td key={index}>{value}</td>\n                ))}\n              </tr>\n              <tr>\n                <td>Daily ROI</td>\n                {dailyRoi.map((value, index) => (\n                  <td key={index}>{value}</td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default InvestmentCalculator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}